/**
 *
 */
!function (t, e) { "object" == typeof exports && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define(["exports"], e) : e(t.Vubx = {}) }(this, function (t) { "use strict"; function e (t) { var e = "undefined" != typeof window && window.__VUE_DEVTOOLS_GLOBAL_HOOK__; if (e) { var r = n(t); r._devtoolHook = e, e.emit("vuex:init", r), e.on("vuex:travel-to-state", function (e) { t.replaceState(e) }), t.__.middleware.subscribe({ after: function (t, n) { e.emit("vuex:mutation", t, n) } }) } } function n (t) { return { state: t.__.$state, getters: t.__.$getters, _devtoolHook: null } } function r (t, e) { function n () { this.constructor = t } $(t, e), t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype, new n) } function o (t, e, n, r) { return new (n || (n = Promise))(function (o, i) { function a (t) { try { c(r.next(t)) } catch (t) { i(t) } } function s (t) { try { c(r.throw(t)) } catch (t) { i(t) } } function c (t) { t.done ? o(t.value) : new n(function (e) { e(t.value) }).then(a, s) } c((r = r.apply(t, e || [])).next()) }) } function i (t, e) { function n (t) { return function (e) { return r([t, e]) } } function r (n) { if (o) throw new TypeError("Generator is already executing."); for (; c;)try { if (o = 1, i && (a = i[2 & n[0] ? "return" : n[0] ? "throw" : "next"]) && !(a = a.call(i, n[1])).done) return a; switch (i = 0, a && (n = [0, a.value]), n[0]) { case 0: case 1: a = n; break; case 4: return c.label++ , { value: n[1], done: !1 }; case 5: c.label++ , i = n[1], n = [0]; continue; case 7: n = c.ops.pop(), c.trys.pop(); continue; default: if (a = c.trys, !(a = a.length > 0 && a[a.length - 1]) && (6 === n[0] || 2 === n[0])) { c = 0; continue } if (3 === n[0] && (!a || n[1] > a[0] && n[1] < a[3])) { c.label = n[1]; break } if (6 === n[0] && c.label < a[1]) { c.label = a[1], a = n; break } if (a && c.label < a[2]) { c.label = a[2], c.ops.push(n); break } a[2] && c.ops.pop(), c.trys.pop(); continue }n = e.call(t, c) } catch (t) { n = [6, t], i = 0 } finally { o = a = 0 } if (5 & n[0]) throw n[1]; return { value: n[0] ? n[1] : void 0, done: !0 } } var o, i, a, s, c = { label: 0, sent: function () { if (1 & a[0]) throw a[1]; return a[1] }, trys: [], ops: [] }; return s = { next: n(0), throw: n(1), return: n(2) }, "function" == typeof Symbol && (s[Symbol.iterator] = function () { return this }), s } function a (t) { return t && "function" == typeof t.then } function s (t, e) { if ("production" !== process.env.NODE_ENV && !t) throw new Error("[vubx warn] " + e) } function c (t, e) { return function (n) { var r; w(n, t, { get: function () { if (r) return r; var o = n.getProvider(); return r = o.getInstance(e), g(n, t, r, e), r }, enumerable: !0, configurable: !0 }) } } function u (t, e) { return function (n) { n.getProvider().register(t, e) } } function f (t, e) { return function (n) { n.getProvider().push(t, e()) } } function p (t) { return function (e) { return function (n) { return function (o) { function i () { for (var r = [], i = 0; i < arguments.length; i++)r[i] = arguments[i]; var a = o.apply(this, r) || this; w(a, "__", { enumerable: !1 }); var s = y(n.prototype), c = n.prototype.created, u = Object.keys(s), f = new t({ data: a, computed: s }); l(a, u), d(a, f, u), _(a, f); var p = a.__; if (e) { var g = e.strict, b = e.root, m = e.identifier, $ = e.provider, O = void 0 === $ ? [] : $, P = e.injector, M = void 0 === P ? [] : P, k = e.plugins, S = void 0 === k ? [] : k; g && v(f, a), b && (p.$root = a, p.provider = new x, m && (p.identifier = m, p.provider.push(m, a))), h(a, O.concat(M).concat(S)) } return c && c.call(a), a } return r(i, o), i }(n) } } } function h (t, e) { e.forEach(function (e) { return e(t) }) } function l (t, e) { var n = t.__.$state; Object.keys(t).forEach(function (r) { e.indexOf(r) < 0 && w(n, r, { get: function () { return t[r] }, enumerable: !0 }) }) } function d (t, e, n) { var r = t.__.$getters; n.forEach(function (n) { w(t, n, { get: function () { return e[n] }, set: function (t) { return e[n] = t }, enumerable: !0 }), w(r, n, { get: function () { return t[n] }, set: function (e) { return t[n] = e }, enumerable: !0 }) }) } function _ (t, e) { for (var n = 0, r = M; n < r.length; n++)!function (n) { w(t, n, { get: function () { return e[n].bind(e) }, enumerable: !1 }) }(r[n]) } function v (t, e) { "production" !== process.env.NODE_ENV && t.$watch(function () { return this.$data }, function (t) { s(e.__.isCommitting, "Do not mutate vubx service data outside mutation handlers.") }, { deep: !0, sync: !0 }) } function y (t) { var e = {}; return Object.getOwnPropertyNames(t).forEach(function (n) { if ("constructor" !== n) { var r = Object.getOwnPropertyDescriptor(t, n); r.get && r.enumerable && (e[n] = { get: r.get, set: r.set }) } }), e } function g (t, e, n, r) { t.__.$children.push(n), n.__.$parent.indexOf(t) <= -1 && n.__.$parent.push(t), s(t.__.$root, "Make sure to have a root service, Please check the root options in the decorator configuration"), n.__.$root = t.__.$root, n.__.identifier = r, t.__.$getters[e] = n.__.$getters, t.__.$state[e] = n.__.$state } function b (t, e, n) { var r = n.value; return n.value = function () { var t = r.apply(this, arguments); if (!a(t)) return t }, n } function m (t, e, n) { var r = n.value; return n.value = function () { for (var t = [], n = 0; n < arguments.length; n++)t[n] = arguments[n]; var o = this.__.middleware, i = { type: this.__.identifier.toString() + ": " + e, payload: t }, a = this.__.$root || this, s = a.__.isCommitting; a.__.isCommitting = !0; var c; try { o.dispatchBefore(this, i, this), c = r.apply(this, t), o.dispatchAfter(this, i, this) } finally { a.__.isCommitting = s } return c }, n } var $ = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, e) { t.__proto__ = e } || function (t, e) { for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]) }, w = Object.defineProperty, O = function () { function t () { this.beforeSubs = [], this.afterSubs = [] } return t.prototype.subscribe = function (t) { t && (t.before && this.beforeSubs.push(t.before), t.after && this.afterSubs.push(t.after)) }, t.prototype.createTask = function (t, e) { void 0 === e && (e = null); var n = this; return function () { for (var r = [], o = 0; o < arguments.length; o++)r[o] = arguments[o]; n.dispatchBefore.apply(n, [e].concat(r)); var i = t.apply(e, r); return n.dispatchAfter.apply(n, [e].concat(r)), i } }, t.prototype.dispatchBefore = function (t) { for (var e = [], n = 1; n < arguments.length; n++)e[n - 1] = arguments[n]; this.run.apply(this, [this.beforeSubs, t].concat(e)) }, t.prototype.dispatchAfter = function (t) { for (var e = [], n = 1; n < arguments.length; n++)e[n - 1] = arguments[n]; this.run.apply(this, [this.afterSubs, t].concat(e)) }, t.prototype.run = function (t, e) { for (var n = [], r = 2; r < arguments.length; r++)n[r - 2] = arguments[r]; for (var o = 0, i = t; o < i.length && !1 !== i[o].apply(e, n); o++); }, t }(), x = function () { function t () { this.instancesMap = new Map, this.classMap = new Map, this.proxy = {} } return Object.defineProperty(t.prototype, "instances", { get: function () { return Array.from(this.instancesMap) }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, "classes", { get: function () { return Array.from(this.classMap) }, enumerable: !0, configurable: !0 }), t.prototype.register = function (t, e) { this.checkIdentifier(t), this.classMap.set(t, e), this.defProxy(t) }, t.prototype.push = function (t, e) { this.checkIdentifier(t), this.instancesMap.set(t, e), this.defProxy(t) }, t.prototype.defProxy = function (t) { var e = this; w(this.proxy, t, { get: function () { return e.getInstance(t) }, enumerable: !0, configurable: !0 }) }, t.prototype.getInstance = function (t) { if (!this.instancesMap.has(t)) { var e = this.classMap.get(t); s(e, t.toString() + " can not find this class"), e && this.instancesMap.set(t, new e) } return this.instancesMap.get(t) }, t.prototype.removeInstance = function (t) { s(this.instancesMap.has(t), "Can not find this instance : identifier[" + t.toString() + "]"), this.instancesMap.delete(t) }, t.prototype.checkIdentifier = function (t) { s(!this.classMap.has(t) && !this.instancesMap.has(t), "The identifier " + t.toString() + " has been repeated") }, t.prototype.hasInstance = function (t) { return this.instancesMap.has(t) }, t.prototype.hasClass = function (t) { return this.classMap.has(t) }, t }(), P = function () { function t () { this.__ = { $getters: {}, $state: {}, $root: null, $parent: [], $children: [], isCommitting: !1, middleware: new O, provider: null, identifier: "__vubx__" } } return t.prototype.dispatch = function (t, e) { for (var n = [], r = 2; r < arguments.length; r++)n[r - 2] = arguments[r]; return o(this, void 0, void 0, function () { var r; return i(this, function (o) { switch (o.label) { case 0: return [4, (r = this.getProvider().getInstance(t))[e].apply(r, n)]; case 1: return [2, o.sent()] } }) }) }, t.prototype.commit = function (t, e) { for (var n = [], r = 2; r < arguments.length; r++)n[r - 2] = arguments[r]; return (o = this.getProvider().getInstance(t))[e].apply(o, n); var o }, t.prototype.replaceState = function (e) { var n = this.__.isCommitting; this.__.isCommitting = !0; for (var r in e) this[r] instanceof t ? this[r].replaceState(e[r]) : this[r] = e[r]; this.__.isCommitting = n }, t.prototype.appendChild = function (t, e, n) { this.getProvider().checkIdentifier(n), w(this, e, { enumerable: !0, get: function () { return t } }), g(this, e, t, n), this.__.$root && this.__.$root.getProvider().push(n, t) }, t.prototype.getProvider = function () { return s(this.__.$root, "Make sure to have a root service, Please check the root options in the decorator configuration"), this.__.$root.__.provider }, t.prototype.subscribe = function (t) { this.__.middleware.subscribe(t) }, t }(), M = ["$watch", "$on", "$once", "$emit", "$off", "$set", "$delete", "$destroy"]; t.Service = P, t.devtool = e, t.lazyInject = c, t.bindClass = u, t.bindFactory = f, t.createDecorator = p, t.mutation = m, t.action = b, Object.defineProperty(t, "__esModule", { value: !0 }) });
